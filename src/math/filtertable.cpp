#include <QDebug>
#include <QVector>
#include <QString>
#include <QMap>
#include <QStringList>
#include "falgorithms.h"
#include "edittable.h"

// Функция создаёт подтаблицу содержащую все значения из входной таблицыш (table),
// превышающие значения максимального шума, передаваемые в виде специального
// объект (settings).

VectorTable edt::filtertable( const VectorTable& table, const QVariantMap& settings )
{
// Создаём пустую подтаблицу из списка имён столбцов входной таблицы.
    VectorTable result( table.getTags() );

// Объявляем список строк для хранения имён фильтруемых столбцов входной
// таблицы.
    QStringList tags;

// Объявляем список пар ключ-значение для хранения значений максимального шума
// ассоциированных с именами столбцов входной таблицы.
    QMap<QString,double> limits;

// Для каждого имени столбца из всего списка имён столбцов входной таблицы кроме
// первого (там у нас значения по X, которые нас не интересуют)...
    foreach( QString tag, fp::tail( table.getTags() ) )
    {
// ...если в настройках указано, что для этого столбца нужно искать сигналы...
        if ( settings[QString("%1_State").arg(tag)].toBool() )
        {
// ...то добавить имя этого столбца к списку имён фильтруемых столбцов входной
// таблицы...
            tags << tag;
// ...и ассоциировать значение предела для этого столбца (извлечённое из
// настроек) с именем этого столбца.
            limits[tag] = settings[QString("%1_MaxNoise").arg(tag)].toDouble();
        }
    }

// Для каждой строки входной таблицы...
    for ( int i = 0, j = table.getHeight(); i < j; i++ )
    {
// ...полагаем что в любой строке таблицы храниться сигнал
        bool check = true;

// Для каждого столбца из числа рассматриваемых...
        foreach( QString tag, tags )
        {
// ...если значение ячейки на пересечении рассматриваемой строки и рассматриваемого
// столбца меньше чем максимальный шум для даннойго столбца...
            if ( table.getColumn(tag)->at(i) < limits[tag] )
            {
// ...то содержимое всех ячеек строки считается шумом...
                check = false;
// ...а поиск продолжается со следующей строки.
                break;
            }
        }

// Если ячейки строки содержит сигнал...
        if ( check )
// ...то строка добавляется к искомой подтаблице
            result << table.getRow(i);
    }

// Возвращается искомая подтаблица
    return result;
}
